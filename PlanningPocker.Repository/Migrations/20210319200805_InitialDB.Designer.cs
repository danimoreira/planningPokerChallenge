// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PlanningPocker.Repository.Context;

namespace PlanningPocker.Repository.Migrations
{
    [DbContext(typeof(PlanningPockerContext))]
    [Migration("20210319200805_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("PlanningPoker")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("PlanningPocker.Domain.Entities.Carta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ValorDaCarta")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Cartas");
                });

            modelBuilder.Entity("PlanningPocker.Domain.Entities.HistoriaDoUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HistoriaDoUsuarios");
                });

            modelBuilder.Entity("PlanningPocker.Domain.Entities.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PlanningPocker.Domain.Entities.Voto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("IdCarta")
                        .HasColumnType("bigint");

                    b.Property<long>("IdHistoriaDoUsuario")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdCarta");

                    b.HasIndex("IdHistoriaDoUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("PlanningPocker.Domain.Entities.Voto", b =>
                {
                    b.HasOne("PlanningPocker.Domain.Entities.Carta", "Carta")
                        .WithMany("Votos")
                        .HasForeignKey("IdCarta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanningPocker.Domain.Entities.HistoriaDoUsuario", "HistoriaDoUsuario")
                        .WithMany("Votos")
                        .HasForeignKey("IdHistoriaDoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanningPocker.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Votos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carta");

                    b.Navigation("HistoriaDoUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PlanningPocker.Domain.Entities.Carta", b =>
                {
                    b.Navigation("Votos");
                });

            modelBuilder.Entity("PlanningPocker.Domain.Entities.HistoriaDoUsuario", b =>
                {
                    b.Navigation("Votos");
                });

            modelBuilder.Entity("PlanningPocker.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Votos");
                });
#pragma warning restore 612, 618
        }
    }
}
